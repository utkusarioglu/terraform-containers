name: build-and-push

on:
  push:
    tags:
      - "**"
      - feature/**/**
      - experiment/**/**/**
    paths:
      - src/**
      - .github/workflows/build-and-push.yml
  workflow_dispatch:

env:
  CACHE_FROM_SRC: /tmp/.buildx-cache
  CACHE_TO_DEST: /tmp/.buildx-cache-new

jobs:
  build-and-push:
    name: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        images:
          - enabled: false
            dockerfile: src/Dockerfile.dev
            base_image_tag: "1.4"
            image_name: tf-devcontainer
            devcontainer_subfolder: src/vanilla
            docker_hub_repo_readme_file_path: src/vanilla/DOCKER_README.md
            docker_hub_repo_short_description: |
              Devcontainer for Terraform and Terratest workloads
            additional_files_to_watch: |
              src/vanilla/**
            additional_apt_packages: ""
            additional_provisioning_script: ""

          - enabled: true
            dockerfile: src/Dockerfile.dev
            base_image_tag: "1.4"
            image_name: tf-k8s-devcontainer
            devcontainer_subfolder: src/k8s
            docker_hub_repo_readme_file_path: src/k8s/DOCKER_README.md
            docker_hub_repo_short_description: |
              Devcontainer for Kubernetes workloads that run on Terraform and Terratest
            additional_files_to_watch: |
              src/k8s/**
            additional_apt_packages: ""
            additional_provisioning_script: "src/k8s/provisioning.sh"

          # - dockerfile: src/Dockerfile.dev
          #   base_image_tag: "1.2"
          #   image_name: tf-eks-devcontainer
          #   devcontainer_subfolder: src/eks
          #   docker_hub_repo_readme_file_path: src/eks/DOCKER_README.md
          #   docker_hub_repo_short_description: |
          #     Devcontainer for AWS EKS workloads that run on Terraform and Terratest
          #   additional_files_to_watch: |
          #     src/eks/**
          #   # Groff is needed because without it, AWS cli documentation doesn't
          #   # work as expected
          #   additional_apt_packages: |
          #     groff
          #   additional_provisioning_script: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v25
        with:
          files: |
            ${{ matrix.images.dockerfile }}
            ${{ matrix.images.additionalFilesToWatch }}
            .github/workflows/build-and-push.yml

      - name: Declare run state
        id: run_state
        run: |
          if [ ${{ github.ref_type }} == tag ] && \
             [ ${{ matrix.images.enabled }} == 'true' ] && \
            ( \
              [ ${{ steps.changed_files.outputs.any_modified }} == true ] || \
              [ ${{ github.event_name }} == workflow_dispatch ] \
            );
          then
            echo "run_docker_build=true" >> $GITHUB_OUTPUT
            echo "::debug::Docker build will carry out as expected."
          else
            echo "run_docker_build=false" >> $GITHUB_OUTPUT
            echo "Docker build is cancelled as the required conditions for a run haven't been met"
          fi

      - name: Variables
        if: steps.run_state.outputs.run_docker_build == 'true'
        id: variables
        run: |
          repo_tag=${{ github.ref_name }}
          image_tag=${{ matrix.images.base_image_tag }}.${repo_tag//\//-}
          image_ref=${{ matrix.images.containerName }}:$image_tag
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT

      - name: Build and push ${{ steps.variables.outputs.image_ref }}
        if: steps.run_state.outputs.run_docker_build == 'true'
        uses: utkusarioglu/devcontainer-build@main
        with:
          docker_hub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_hub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          image_name: ${{ matrix.images.image_name }}
          image_tag: ${{ steps.variables.outputs.image_tag }}
          dockerfile_path: ${{ matrix.images.dockerfile }}
          build_args: |
            BASE_IMAGE_TAG=${{ matrix.images.base_image_tag }}
            ROOT_PASS=${{ secrets.DOCKER_IMAGE_ROOT_PASS }}
            ADDITIONAL_APT_PACKAGES=${{ matrix.images.additional_apt_packages }}
            ADDITIONAL_PROVISIONING_SCRIPT=${{ matrix.images.additional_provisioning_script }}
          devcontainer_subfolder: ${{ matrix.images.devcontainer_subfolder }}
          devcontainer_run_cmd_path: ""
          docker_hub_repo_short_description: |
            ${{ matrix.images.docker_hub_repo_short_description }}
          docker_hub_repo_readme_file_path: |
            ${{ matrix.images.docker_hub_repo_readme_file_path }}

      # - name: Telegram notifications
      #   if: always()
      #   uses: utkusarioglu/telegram-notifications@main
      #   with:
      #     telegram_id: ${{ secrets.TELEGRAM_ID }}
      #     telegram_token: ${{ secrets.TELEGRAM_TOKEN }}
      #     job_status: ${{ job.status }}
      #     github_context: ${{ toJson(github) }}
